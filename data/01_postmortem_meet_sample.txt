[14:35] 田中: みなさん集まりましたか？14時30分頃からAPI応答時間のアラートが出ています。

[14:36] 鈴木: はい、確認しました。ユーザーAPIのレスポンスタイムが通常200msのところ、5秒以上かかっているようです。

[14:36] 佐藤: データベースのCPU使用率を見てます。RDSのCPUが98%で張り付いてますね。

[14:37] 田中: エラー率はどうですか？

[14:37] 鈴木: タイムアウトエラーが30%発生しています。約1万2000ユーザーに影響が出ている模様です。

[14:38] 山田: カスタマーサポートから問い合わせが殺到しているとの連絡がありました。至急対応をお願いします。

[14:39] 佐藤: slow query logを確認します...あ、user_ordersテーブルへのクエリが異常に遅いです。

[14:40] 鈴木: 今朝10時にデプロイした新機能が原因かもしれません。注文履歴の集計処理を追加したんですが...

[14:41] 佐藤: EXPLAIN見たところ、インデックスが効いてないクエリがありますね。WHERE句でcreated_atとuser_idを使ってるけど、複合インデックスがない。

[14:42] 田中: とりあえず緊急対応として、該当機能をfeature flagでOFFにできますか？

[14:43] 鈴木: はい、今すぐやります。feature flag切り替えます。

[14:45] 鈴木: feature flagをOFFにしました。

[14:47] 佐藤: CPU使用率が下がり始めました。現在70%です。

[14:48] 田中: API応答時間も改善してきました。500ms程度まで回復。

[14:50] 佐藤: CPU 40%まで下がりました。正常値です。

[14:51] 田中: エラー率も0.1%以下に戻りました。

[14:52] 山田: お客様への影響時間は約20分ということですね。売上への影響を試算すると、この時間帯の平均売上が分間10万円なので、約200万円の機会損失の可能性があります。

[14:53] 鈴木: 申し訳ございません。テスト環境ではデータ量が少なくて、この問題が検出できませんでした。

[14:54] 佐藤: 本番相当のデータ量でのパフォーマンステストが必要ですね。

[14:55] 田中: あと、このクエリパターンならcreated_atとuser_idの複合インデックスを追加すれば解決できそうです。

[14:56] 鈴木: 承知しました。インデックス追加のマイグレーションを準備します。

[14:57] 山田: では一旦収束ということで。後ほどポストモーテムをお願いします。

[14:58] 田中: はい、本日中にドラフト作成します。

[14:59] 全員: お疲れ様でした。
